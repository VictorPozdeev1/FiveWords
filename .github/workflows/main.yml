name: my-first-ga

on:
  push:
    branches: "github-actions-test"
jobs:
  build-all:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: |
        cd front-end
        npm ci
        npm run prod_linux
        ls --hide=node* -R
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - run: dotnet restore
    - run: dotnet build --no-restore
    - run: ls --hide=node* -R
    - uses: actions/upload-artifact@v3
      with:
        name: my-executable
        path: ./bin/Debug/net6.0        
    - uses: actions/upload-artifact@v3
      with:
        name: my-static-files
        path: ./static-files
  deploy:
    needs: build-all
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
#           name: my-artifact
        path: path-to-artifact
    - run: ls -R path-to-artifact  
    - uses: cross-the-world/ssh-scp-ssh-pipelines@latest
      env:
        BACKUP_DIRECTORY: "backed-up-by-${{ github.sha }}/"
      with:
        working-directory: ./test_wd
        host: ${{ secrets.HOST_IP }}
        user: ${{ secrets.N_L }}
        pass: ${{ secrets.N_P }}
        connect_timeout: 10s
        first_ssh: |
          pwd &&
          ls -R &&
          mkdir -p $BACKUP_DIRECTORY &&
          cp -r * $BACKUP_DIRECTORY &&
          ls -R &&
        scp: |
          path-to-artifact/my-executable/* => ./
          path-to-artifact/my-static-files/* => ./static-files/
        last_ssh: |
          pwd
          ls -R


#     - name: Prints
#       run: |
#         echo "hello world"
#         pwd        
        
#         echo "Test_secret:"       
#         echo ${{ secrets.TEST_SECRET1 }}                    
#         echo ${{ vars.TEST_SECRET1 }} > ~/test1.txt        
#         echo "in file:"
#         cat ~/test1.txt
        
#         apt list --installed | grep ssh
        
#         echo "test2" > ~/test2.txt
#         ls -l ~
        
#         echo ".NET ver:" && dotnet --version        
#         echo "goodbye world"
# -----------------

#       ls -R ./bin/Debug/net6.0
#     - name: Add a file

#         echo "Test_repo_var:"       
#         echo ${{ vars.TEST_REPO_VAR }}                    
#         echo ${{ vars.TEST_REPO_VAR }} > ~/test1.txt
#         echo "in file:"
#         cat ~/test1.txt

# sshpass -p '${{ secrets.N_P }}' scp ~/test2.txt nonroot@195.43.142.14:~/temp

#     - name: TRYING ssh-scp-ssh-pipelines ----------------------------
#       uses: cross-the-world/ssh-scp-ssh-pipelines@latest
#       env:
#         WELCOME: "ssh scp ssh pipelines"
#         LASTSSH: "Doing something after copying"
#       with:
#         host: ${{ secrets.HOST_IP }}
#         user: ${{ secrets.N_L }}
#         pass: ${{ secrets.N_P }}
#         connect_timeout: 10s
#         first_ssh: |
#           pwd &&
#           ls -la &&
#           mkdir -p ~/test &&
#           ls -la &&
#         scp: |
#           ~/test2.txt => ~/test/
#         last_ssh: |
#           pwd
#           ls -la
